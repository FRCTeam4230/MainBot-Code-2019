// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4230.MyRobot.subsystems;


import org.usfirst.frc4230.MyRobot.OI;
import org.usfirst.frc4230.MyRobot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;

import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Solenoid;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Climber extends Subsystem {
    DoubleSolenoid backPiston;
    DoubleSolenoid frontPiston;
    public static OI oi;


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Climber() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        frontPiston = new DoubleSolenoid(0, 1);
        backPiston = new DoubleSolenoid(2, 3);
        oi = new OI();
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        

        if (oi.driver.getRawButton(1)){

            frontPiston.set(DoubleSolenoid.Value.kForward);
            backPiston.set(DoubleSolenoid.Value.kForward);
            SmartDashboard.putBoolean("backPistonState", true);
            SmartDashboard.putBoolean("frontPistonState", true);    
        }
        if (oi.driver.getRawButton(4)){
            frontPiston.set(DoubleSolenoid.Value.kReverse);
            backPiston.set(DoubleSolenoid.Value.kReverse);
            SmartDashboard.putBoolean("backPistonState", false);
            SmartDashboard.putBoolean("frontPistonState", false);    
            
        }
        if (oi.driver.getRawButton(2)){
            frontPiston.set(DoubleSolenoid.Value.kReverse);
            SmartDashboard.putBoolean("frontPistonState", false);             
    
            
        }  
        if (oi.driver.getRawButton(3)){
            
            backPiston.set(DoubleSolenoid.Value.kReverse);
            SmartDashboard.putBoolean("backPistonState", false);    
            
        }
        
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

